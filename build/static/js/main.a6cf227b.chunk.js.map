{"version":3,"sources":["components/images/reactMovie_logo.png","components/images/tmdb_logo.svg","components/styles/StyledHeader.js","components/elements/Header.js","components/styles/StyledGrid.js","components/elements/Grid.js","components/styles/StyledHeroImage.js","components/elements/HeroImage.js","components/styles/StyledLoadMoreBtn.js","components/elements/LoadMoreBtn.js","components/styles/StyledMovieThumb.js","components/elements/MovieThumb.js","components/styles/StyledSearchBar.js","components/elements/SearchBar.js","components/styles/StyledSpinner.js","components/elements/Spinner.js","config.js","components/Home.js","components/hooks/useHomeFetch.js","components/styles/GlobalStyle.js","components/styles/StyledNavigation.js","components/elements/Navigation.js","components/styles/StyledMovieInfo.js","components/elements/MovieInfo.js","helpers.js","components/styles/StyledMovieInfoBar.js","components/elements/MovieInfoBar.js","components/styles/StyledActor.js","components/elements/Actor.js","components/Movie.js","components/hooks/useMovieFetch.js","components/NotFound.js","components/App.js","index.js","components/images/no_image.jpg"],"names":["module","exports","StyledHeader","styled","div","StyledRMDBLogo","img","StyledTMDBLogo","Header","className","to","src","RMDBLogo","alt","TMDBLogo","StyledGrid","StyledGridContent","Grid","header","children","StyledHeroImage","props","image","HeroImage","title","text","StyledLoadMoreBtn","button","LoadMoreBtn","callback","type","onClick","StyledMovieThumb","MovieThumb","movieId","clickable","StyledSearchBar","StyledSearchBarContent","SearchBar","useState","state","setState","timeOut","useRef","name","size","placeholder","onChange","event","value","target","clearTimeout","current","setTimeout","StyledSpinner","Spinner","API_URL","API_KEY","IMAGE_BASE_URL","SEARCH_BASE_URL","POPULAR_BASE_URL","Home","searchTerm","setSearchTerm","movies","loading","setLoading","error","setError","fetchMovies","endpoint","a","isLoadMore","search","fetch","json","result","prev","results","heroImage","currentPage","page","totalPages","total_pages","console","log","useEffect","sessionStorage","homeState","JSON","parse","setItem","stringify","useHomeFetch","Fragment","backdrop_path","original_title","overview","map","movie","index","key","id","poster_path","NoImage","movieName","searchEndpoint","popularMovies","GlobalStyle","createGlobalStyle","StyledNavigation","Navigation","StyledMovieInfo","backdrop","MovieInfo","vote_average","directors","length","element","credit_id","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","StyledMovieInfoBar","MovieInfoBar","time","budget","revenue","hours","Math","floor","mins","calcTime","StyledActor","Actor","actor","profile_path","character","Movie","fetchData","useCallback","creditsEndpoint","creditsResult","crew","filter","member","job","cast","localStorage","useMovieFetch","runtime","NotFound","App","path","default","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a6cf227b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/reactMovie_logo.08494abf.png\";","module.exports = __webpack_public_path__ + \"static/media/tmdb_logo.e9ade4ca.svg\";","import styled from 'styled-components';\r\n\r\nexport const StyledHeader = styled.div`\r\n  background: #1c1c1c;\r\n  padding: 0 20px;\r\n  box-sizing: border-box;\r\n\r\n  .header-content {\r\n    max-width: 1280px;\r\n    min-height: 120px;\r\n    padding: 20px 0px;\r\n    margin: 0 auto;\r\n    box-sizing: border-box;\r\n\r\n    @media screen and (max-width: 500px) {\r\n      max-width: 1280px;\r\n      min-height: 0px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledRMDBLogo = styled.img`\r\n  width: 250px;\r\n  margin-top: 20px;\r\n\r\n  @media screen and (max-width: 500px) {\r\n    width: 150px;\r\n    margin-top: 5px;\r\n  }\r\n`;\r\n\r\nexport const StyledTMDBLogo = styled.img`\r\n  width: 122px;\r\n  margin-top: 25px;\r\n  float: right;\r\n\r\n  @media screen and (max-width: 500px) {\r\n    display: inline-block;\r\n    width: 80px;\r\n    margin-top: 0px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport RMDBLogo from '../images/reactMovie_logo.png';\r\nimport TMDBLogo from '../images/tmdb_logo.svg';\r\n// import styled from 'styled-components';\r\nimport { Link } from '@reach/router';\r\nimport {\r\n        StyledHeader,\r\n        StyledRMDBLogo,\r\n        StyledTMDBLogo\r\n    } from '../styles/StyledHeader';\r\n\r\nconst Header = () => (\r\n            <StyledHeader> \r\n               <div className=\"header-content\">\r\n                   <Link to=\"/\">\r\n                        <StyledRMDBLogo src={RMDBLogo} alt=\"rdbm logo\"/>                   \r\n                   </Link>\r\n                   <StyledTMDBLogo src={TMDBLogo} alt=\"tmdb logo\"/>\r\n               </div>\r\n            </StyledHeader>\r\n            )\r\n\r\nexport default Header;","import styled from 'styled-components';\r\n\r\nexport const StyledGrid = styled.div`\r\n  max-width: 1280px;\r\n  margin: 0 auto;\r\n  padding: 0 20px;\r\n  h1 {\r\n    font-family: 'Abel', sans-serif;\r\n    font-size: 42px;\r\n\r\n    @media screen and (max-width: 768px) {\r\n      font-size: 22px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledGridContent = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(5, minmax(100px, 1fr));\r\n  grid-gap: 40px;\r\n  position: relative;\r\n\r\n  .grid-element {\r\n    animation: animateGrid 0.5s;\r\n  }\r\n\r\n  @keyframes animateGrid {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    grid-template-columns: repeat(4, minmax(100px, 1fr));\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    grid-template-columns: repeat(3, minmax(100px, 1fr));\r\n  }\r\n\r\n  @media screen and (max-width: 600px) {\r\n    grid-template-columns: repeat(2, minmax(100px, 1fr));\r\n  }\r\n\r\n  @media screen and (max-width: 375px) {\r\n    grid-template-columns: repeat(1, 1fr);\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { StyledGrid, StyledGridContent } from '../styles/StyledGrid';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Grid = ({header, children}) => (\r\n    <StyledGrid>\r\n        <h1>{header}</h1>\r\n        <StyledGridContent>\r\n            {children}\r\n        </StyledGridContent>\r\n    </StyledGrid>\r\n    );\r\n\r\nGrid.propTypes = {\r\n    header: PropTypes.string,\r\n}\r\n\r\nexport default Grid;","import styled from 'styled-components';\r\n\r\nexport const StyledHeroImage = styled.div`\r\n  background: ${props =>\r\n    `linear-gradient(\r\n      to bottom, rgba(0,0,0,0)\r\n      39%,rgba(0,0,0,0)\r\n      41%,rgba(0,0,0,0.65)\r\n      100%\r\n    ),\r\n    url('${props.image}'), #1c1c1c`};\r\n  background-size: 100%, cover !important;\r\n  background-position: center, center !important;\r\n  width: 100%;\r\n  height: 600px;\r\n  position: relative;\r\n  animation: animateHeroimage 1s;\r\n\r\n  .heroimage-content {\r\n    max-width: 1280px;\r\n    padding: 20px;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  .heroimage-text {\r\n    z-index: 100;\r\n    max-width: 700px;\r\n    position: absolute;\r\n    bottom: 40px;\r\n    margin-right: 20px;\r\n    min-height: 100px;\r\n    background: rgba(0, 0, 0, 0);\r\n    color: #fff;\r\n\r\n    h1 {\r\n      font-family: 'Abel', sans-serif;\r\n      font-size: 48px;\r\n      color: #fff;\r\n\r\n      @media screen and (max-width: 720px) {\r\n        font-size: 38px;\r\n        color: #fff;\r\n      }\r\n    }\r\n\r\n    p {\r\n      font-family: 'Abel', sans-serif;\r\n      font-size: 22px;\r\n      line-height: 26px;\r\n      color: #fff;\r\n\r\n      @media screen and (max-width: 720px) {\r\n        font-size: 16px;\r\n        line-height: 20px;\r\n        color: #fff;\r\n      }\r\n    }\r\n\r\n    @media screen and (max-width: 720px) {\r\n      max-width: 100%;\r\n    }\r\n  }\r\n\r\n  @keyframes animateHeroimage {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport {\r\n    StyledHeroImage\r\n} from '../styles/StyledHeroImage';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst HeroImage = ({ image, title, text }) => (\r\n    <StyledHeroImage image={image}>\r\n      <div className=\"heroimage-content\">\r\n        <div className=\"heroimage-text\">\r\n          <h1>{title}</h1>\r\n          <p>{text}</p>\r\n        </div>\r\n      </div>\r\n    </StyledHeroImage>\r\n  );\r\n\r\nHeroImage.propTypes = {\r\n  image: PropTypes.string,\r\n  title: PropTypes.string,\r\n  text:  PropTypes.string\r\n}\r\n\r\nexport default HeroImage;","import styled from 'styled-components';\r\n\r\nexport const StyledLoadMoreBtn = styled.button`\r\n  background: #000;\r\n  width: 25%;\r\n  min-width: 200px;\r\n  height: 70px;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n  border-radius: 40px;\r\n  font-family: 'Abel', sans-serif;\r\n  font-size: 28px;\r\n  max-width: 1280px;\r\n  display: block;\r\n  margin: 20px auto;\r\n  padding: 0 20px;\r\n  outline: none;\r\n\r\n  :hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { StyledLoadMoreBtn } from '../styles/StyledLoadMoreBtn';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst LoadMoreBtn = ({text, callback}) => ( \r\n    <StyledLoadMoreBtn type=\"button\" onClick={callback}>\r\n        {text}\r\n    </StyledLoadMoreBtn> \r\n    );\r\n\r\nLoadMoreBtn.propTypes = {\r\n    text: PropTypes.string,\r\n    callback: PropTypes.func\r\n}\r\n\r\nexport default LoadMoreBtn;","import styled from 'styled-components';\r\n\r\nexport const StyledMovieThumb = styled.div`\r\n  img {\r\n    width: 100%;\r\n    height: auto;\r\n    /* max-height: 350px; */\r\n    transition: all 0.3s;\r\n    object-fit: cover;\r\n    border-radius: 20px;\r\n\r\n    :hover {\r\n      opacity: 0.8;\r\n    }\r\n\r\n    /* @media screen and (max-width: 1024px) {\r\n      height: 300px;\r\n    }\r\n\r\n    @media screen and (max-width: 768px) {\r\n      height: 350px;\r\n    }\r\n\r\n    @media screen and (max-width: 600px) {\r\n      max-height: 300px;\r\n    }\r\n\r\n    @media screen and (max-width: 375px) {\r\n      max-height: 450px;\r\n    } */\r\n\r\n    .clickable {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport {StyledMovieThumb} from '../styles/StyledMovieThumb';\r\nimport { Link } from '@reach/router';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MovieThumb = ({image, movieId, clickable}) => (\r\n      <StyledMovieThumb>\r\n        {\r\n            clickable ? ( \r\n            <Link to={`/${movieId}`}>\r\n                <img className=\"clickable\" src={image} />-                \r\n            </Link>\r\n            ) :  (<img src={image} />)\r\n        }\r\n    </StyledMovieThumb>\r\n    );\r\n\r\nMovieThumb.propTypes = {\r\n    image: PropTypes.string,\r\n    movieId: PropTypes.number,\r\n    clickable: PropTypes.bool\r\n}    \r\n\r\nexport default MovieThumb;","import styled from 'styled-components';\r\n\r\nexport const StyledSearchBar = styled.div`\r\n  width: 100%;\r\n  height: 105px;\r\n  background: #1c1c1c;\r\n  padding: 25px 20px 0px 20px;\r\n  box-sizing: border-box;\r\n  color: #fff;\r\n`;\r\n\r\nexport const StyledSearchBarContent = styled.div`\r\n  max-width: 1280px;\r\n  width: 100%;\r\n  height: 55px;\r\n  background: #353535;\r\n  margin: 0 auto;\r\n  border-radius: 40px;\r\n  position: relative;\r\n  color: #fff;\r\n\r\n  .fa-search {\r\n    position: absolute;\r\n    left: 20px;\r\n    top: 12px;\r\n    color: #fff;\r\n    z-index: 1000;\r\n  }\r\n\r\n  input {\r\n    font-family: 'Abel', sans-serif;\r\n    font-size: 28px;\r\n    position: absolute;\r\n    left: 0px;\r\n    margin: 8px 0;\r\n    padding: 0 0 0 60px;\r\n    border: 0;\r\n    width: 95%;\r\n    background: transparent;\r\n    height: 40px;\r\n    color: #fff;\r\n    box-sizing: border-box;\r\n\r\n    :focus {\r\n      outline: none;\r\n    }\r\n\r\n    @media screen and (max-width: 720px) {\r\n      font-size: 28px;\r\n    }\r\n  }\r\n`;\r\n","import React, { useState, useRef } from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { \r\n  StyledSearchBar,\r\n  StyledSearchBarContent \r\n} from '../styles/StyledSearchBar';\r\n\r\nconst SearchBar = ({ callback }) => {\r\n  const [state, setState] = useState('');\r\n  const timeOut = useRef(null);\r\n\r\n  const doSearch = event => {\r\n    const { value } = event.target;\r\n    \r\n    clearTimeout(timeOut.current);\r\n    setState(value);\r\n\r\n    timeOut.current = setTimeout(() => {\r\n      callback(value);\r\n    }, 500);\r\n  }\r\n\r\n  return (\r\n    <StyledSearchBar>\r\n      <StyledSearchBarContent>\r\n        <FontAwesome className=\"fa-search\" name=\"search\" size=\"2x\" />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search Movie\"\r\n          onChange={doSearch}\r\n          value={state}\r\n        />\r\n      </StyledSearchBarContent>\r\n    </StyledSearchBar>\r\n  )\r\n}\r\n\r\nSearchBar.propTypes = {\r\n  callback: PropTypes.func,\r\n}\r\n\r\nexport default SearchBar;","import styled from 'styled-components';\r\n\r\nexport const StyledSpinner = styled.div`\r\n  border: 5px solid #f3f3f3; /* Light grey */\r\n  border-top: 5px solid #16d47b; /* Blue */\r\n  border-radius: 50%;\r\n  width: 50px;\r\n  height: 50px;\r\n  animation: spin 0.8s linear infinite;\r\n  margin: 20px auto;\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { StyledSpinner } from '../styles/StyledSpinner';\r\n\r\nconst Spinner = () =>  <StyledSpinner />\r\n\r\nexport default Spinner;","// Configuration for TMDB\r\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\r\n// Read more about the API here: https://developers.themoviedb.org/\r\n\r\nconst API_URL = 'https://api.themoviedb.org/3/';\r\nconst API_KEY = '844dba0bfd8f3a4f3799f6130ef9e335';\r\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\r\n// Sizes: w300, w780, w1280, original\r\nconst BACKDROP_SIZE = 'w1280';\r\n// w92, w154, w185, w342, w500, w780, original\r\nconst POSTER_SIZE = 'w500';\r\n\r\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&query=`;\r\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}`;\r\n\r\nexport { API_URL, API_KEY, IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE, SEARCH_BASE_URL, POPULAR_BASE_URL };\r\n","import React, { useState } from 'react';\r\nimport Grid from './elements/Grid';\r\n// import Header from './elements/Header';\r\nimport HeroImage from './elements/HeroImage';\r\nimport LoadMoreBtn from './elements/LoadMoreBtn';\r\nimport MovieThumb from './elements/MovieThumb';\r\nimport SearchBar from './elements/SearchBar';\r\nimport Spinner from './elements/Spinner';\r\nimport NoImage from './images/no_image.jpg';\r\n\r\nimport { useHomeFetch } from './hooks/useHomeFetch';\r\nimport {     \r\n    POSTER_SIZE, \r\n    BACKDROP_SIZE, \r\n    IMAGE_BASE_URL,\r\n    POPULAR_BASE_URL,\r\n    SEARCH_BASE_URL\r\n} from '../config';\r\n\r\n\r\nconst Home = () => {\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n   const [{ state: {movies, heroImage, currentPage, totalPages},\r\n    loading, \r\n    error \r\n}, fetchMovies] = useHomeFetch(searchTerm);\r\n   \r\n   const searchMovies = search => {\r\n    const endpoint = search ? SEARCH_BASE_URL + search : POPULAR_BASE_URL;\r\n    setSearchTerm(search);\r\n    fetchMovies(endpoint);\r\n   }\r\n\r\n   const loadMoreMovies = () => {\r\n       const searchEndpoint = `${SEARCH_BASE_URL}${searchTerm}&page=${currentPage + 1}`;\r\n       const popularMovies = `${POPULAR_BASE_URL}&page=${currentPage + 1}`;\r\n       const endpoint = searchTerm ? searchEndpoint : popularMovies;\r\n       fetchMovies(endpoint);\r\n   }\r\n\r\n//    if(error) return <div> Something went wrong </div>\r\n   if(!movies[0]) return <Spinner />;\r\n    return (\r\n        <React.Fragment>\r\n            { !searchTerm && (\r\n                <HeroImage \r\n                    image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\r\n                    title={heroImage.original_title}\r\n                    text={heroImage.overview}\r\n                />\r\n            )}\r\n            <SearchBar callback={searchMovies}/>\r\n            <Grid header={searchTerm ? 'Search Result' : 'Popular Movies' }>\r\n                {\r\n                    movies.map((movie, index) => (\r\n                        <MovieThumb\r\n                        key={movie.id}\r\n                        clickable\r\n                        image={\r\n                            movie.poster_path ? \r\n                            `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                             : NoImage \r\n                            }\r\n                        movieId = {movie.id}\r\n                        movieName = {movie.original_title}\r\n                        />\r\n                    ))\r\n                }\r\n            </Grid>\r\n           {loading && <Spinner />}\r\n           {currentPage < totalPages && !loading &&(\r\n            <LoadMoreBtn text=\"Load more\" callback={loadMoreMovies} /> \r\n            )}\r\n        </React.Fragment>\r\n    )    \r\n}\r\n\r\nexport default Home;","import  { useState, useEffect } from 'react';\r\nimport { \r\n   POPULAR_BASE_URL\r\n} from '../../config';\r\n\r\n\r\nexport const useHomeFetch = searchTerm => {\r\n\r\nconst [state, setState] = useState({ movies: [] });\r\nconst [loading, setLoading] = useState(false);\r\nconst [error, setError] = useState(false);\r\n\r\n\r\nconst fetchMovies = async endpoint => { \r\n    setError(false);\r\n    setLoading(true);\r\n\r\n    const isLoadMore = endpoint.search('page');\r\n    try { \r\n        const result = await (await fetch(endpoint)).json();\r\n        setState(prev => ({\r\n            ...prev,\r\n            movies: isLoadMore !== -1\r\n            ? [...prev.movies, ...result.results]\r\n            : [...result.results],\r\n            heroImage: prev.heroImage || result.results[0],\r\n            currentPage: result.page,\r\n            totalPages: result.total_pages,\r\n          }));\r\n    }\r\n    catch (error){\r\n        setError(true);\r\n        console.log(error);\r\n    }\r\n    setLoading(false);\r\n\r\n }\r\n\r\n useEffect(() => { \r\n     if(sessionStorage.homeState){\r\n         console.log('grabbing from sessionStorage');\r\n         setState(JSON.parse(sessionStorage.homeState));\r\n         setLoading(false);\r\n     }\r\n     else{\r\n        console.log('grabbing from api');\r\n        fetchMovies(POPULAR_BASE_URL);\r\n     }\r\n  }, []);\r\n\r\n  useEffect(() =>{\r\n      if(!searchTerm){\r\n          console.log('writing to session storage')\r\n          sessionStorage.setItem('homeState', JSON.stringify(state));\r\n      }\r\n\r\n  }, [searchTerm, state]);\r\n\r\n  return [{ state, loading, error }, fetchMovies]\r\n\r\n}","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledNavigation = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 70px;\r\n  background: #353535;\r\n  color: #fff;\r\n\r\n  .navigation-content {\r\n    max-width: 1280px;\r\n    margin: 0 auto;\r\n    padding: 0 20px;\r\n    width: 100%;\r\n\r\n    p {\r\n      font-family: 'Abel', sans-serif;\r\n      font-size: 22px;\r\n      float: left;\r\n      color: #fff;\r\n      padding-right: 10px;\r\n      text-decoration: none;\r\n\r\n      @media screen and (max-width: 768px) {\r\n        font-size: 16px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Link } from '@reach/router';\r\nimport { StyledNavigation } from '../styles/StyledNavigation';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Navigation = ({ movie }) => (\r\n    <StyledNavigation>\r\n      <div className=\"navigation-content\">\r\n        <Link to=\"/\">\r\n          <p>Home</p>\r\n        </Link>\r\n        <p>|</p>\r\n        <p>{movie}</p>\r\n      </div>\r\n    </StyledNavigation>\r\n  );\r\n\r\nNavigation.propTypes = {\r\n  movie: PropTypes.string,\r\n}\r\n\r\nexport default Navigation;","import styled from 'styled-components';\r\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from '../../config';\r\n\r\nexport const StyledMovieInfo = styled.div`\r\n  background: ${props =>\r\n    props.backdrop\r\n      ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.backdrop}')`\r\n      : '#000'};\r\n  background-size: cover !important;\r\n  background-position: center !important;\r\n  width: 100%;\r\n  padding: 40px 20px;\r\n  box-sizing: border-box;\r\n  animation: animateMovieinfo 1s;\r\n\r\n  .movieinfo-content {\r\n    max-width: 1280px;\r\n    min-height: 450px;\r\n    margin: 0 auto;\r\n    background: rgb(0, 0, 0, 0.7);\r\n    border-radius: 20px;\r\n    position: relative;\r\n  }\r\n\r\n  .movieinfo-thumb {\r\n    width: 300px;\r\n    float: left;\r\n\r\n    @media screen and (max-width: 768px) {\r\n      width: 100% !important;\r\n    }\r\n  }\r\n\r\n  .movieinfo-text {\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    padding: 40px;\r\n    color: #fff;\r\n    overflow: hidden;\r\n\r\n    h1 {\r\n      font-family: 'Abel', sans-serif;\r\n      font-size: 48px;\r\n      margin: 0;\r\n\r\n      @media screen and (max-width: 1000px) {\r\n        font-size: 32px !important;\r\n      }\r\n    }\r\n\r\n    h3 {\r\n      font-size: 16px;\r\n      line-height: 0;\r\n      margin-top: 30px;\r\n    }\r\n\r\n    p {\r\n      font-family: 'Abel', sans-serif;\r\n      font-size: 18px;\r\n      line-height: 26px;\r\n    }\r\n  }\r\n\r\n  .rating-director {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n  }\r\n\r\n  .score {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 35px;\r\n    height: 35px;\r\n    background: #fff;\r\n    color: #000;\r\n    font-weight: 800;\r\n    border-radius: 25px;\r\n    margin: 0px 0 0 0;\r\n  }\r\n\r\n  .director {\r\n    margin: 0 0 0 40px;\r\n\r\n    p {\r\n      margin: 0;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    min-height: 600px;\r\n    height: auto;\r\n  }\r\n\r\n  @keyframes animateMovieinfo {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport NoImage from '../images/no_image.jpg';\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\r\nimport MovieThumb from './MovieThumb';\r\nimport { StyledMovieInfo } from '../styles/StyledMovieInfo';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MovieInfo = ({movie}) => (\r\n    <StyledMovieInfo backdrop={movie.backdrop_path}>\r\n        <div className=\"movieinfo-content\">\r\n            <div className=\"movieinfo-thumb\">\r\n                <MovieThumb \r\n                    image={\r\n                        movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}` : NoImage\r\n                    }\r\n                    clickable={false}\r\n                />\r\n            </div>\r\n            <div className=\"movieinfo-text\">\r\n                <h1>{movie.title}</h1>\r\n                <h3>PLOT</h3>\r\n                <p>{movie.overview}</p>\r\n\r\n                <div className=\"rating-director\">\r\n                    <div>\r\n                        <h3>IMDB RATING</h3>\r\n                        <div className=\"score\">\r\n                            {movie.vote_average}                   \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"director\">\r\n                        <h3>DIRECTOR{movie.directors.length > 1 ? 'S' : ''}</h3>\r\n                        {movie.directors.map(element =>(\r\n                            <p key={element.credit_id}>{element.name}</p>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </StyledMovieInfo>\r\n);\r\n\r\nMovieInfo.propTypes = {\r\n    movie: PropTypes.object,\r\n    directors: PropTypes.array,\r\n}\r\n\r\nexport default MovieInfo;","// Convert time to hours and minutes\r\nexport const calcTime = time => {\r\n  const hours = Math.floor(time / 60);\r\n  const mins = time % 60;\r\n  return `${hours}h ${mins}m`;\r\n};\r\n// Convert a number to money formatting\r\nexport const convertMoney = money => {\r\n  const formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 0,\r\n  });\r\n  return formatter.format(money);\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledMovieInfoBar = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  min-height: 100px;\r\n  height: auto;\r\n  background: #1c1c1c;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  font-family: 'Abel', sans-serif;\r\n  font-size: 20px;\r\n\r\n  .movieinfobar-content {\r\n    max-width: 1280px;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    color: #fff;\r\n  }\r\n\r\n  .movieinfobar-content-col {\r\n    float: left;\r\n    width: 33.33%;\r\n    box-sizing: border-box;\r\n    padding: 10px 20px 0 0;\r\n  }\r\n\r\n  .movieinfobar-info {\r\n    padding: 5px 0 0 10px;\r\n    float: left;\r\n  }\r\n\r\n  .fa-time,\r\n  .fa-revenue {\r\n    float: left;\r\n    margin-top: -4px;\r\n  }\r\n\r\n  .fa-budget {\r\n    float: left;\r\n    margin-top: -3px;\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    .fa-time,\r\n    .fa-revenue,\r\n    .fa-budget {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 425px) {\r\n    font-size: 14px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport { calcTime, convertMoney } from '../../helpers';\r\nimport {StyledMovieInfoBar} from '../styles/StyledMovieInfoBar' ;\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MovieInfoBar = ({time, budget, revenue}) => (\r\n    <StyledMovieInfoBar>\r\n        <div className=\"movieinfobar-content\">\r\n            <div className=\"movieinfobar-content-col\">\r\n                <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\"/>\r\n                <span className=\"movieinfobar-info\">\r\n                    Running Time: {calcTime(time)}\r\n                </span>\r\n            </div>\r\n\r\n            <div className=\"movieinfobar-content-col\">\r\n                <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\"/>\r\n                <span className=\"movieinfobar-info\">\r\n                   Budget: {convertMoney(budget)}\r\n                </span>\r\n            </div>\r\n\r\n            <div className=\"movieinfobar-content-col\">\r\n                <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\"/>\r\n                <span className=\"movieinfobar-info\">\r\n                    Running Time: {convertMoney(revenue)}\r\n                </span>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    </StyledMovieInfoBar>\r\n);\r\n\r\nMovieInfoBar.propTypes = {\r\n    time: PropTypes.number,\r\n    budget: PropTypes.number,\r\n    revenue: PropTypes.number\r\n}\r\nexport default MovieInfoBar;","import styled from 'styled-components';\r\n\r\nexport const StyledActor = styled.div`\r\n  font-family: 'Abel', sans-serif;\r\n  color: #fff;\r\n  background: #1c1c1c;\r\n  border-radius: 20px;\r\n  padding: 5px;\r\n  text-align: center;\r\n\r\n  img {\r\n    display: block;\r\n    width: 100%;\r\n    height: 200px;\r\n    object-fit: cover;\r\n    border-radius: 15px;\r\n  }\r\n\r\n  .actor-name {\r\n    display: block;\r\n    font-size: 18px;\r\n    margin: 10px 0 0 0;\r\n  }\r\n\r\n  .actor-character {\r\n    display: block;\r\n    font-size: 16px;\r\n    margin: 0 0 10px 0;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport NoImage from '../images/no_image.jpg';\r\nimport {IMAGE_BASE_URL, POSTER_SIZE} from '../../config';\r\nimport {StyledActor} from '../styles/StyledActor';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Actor = ({actor}) => (\r\n    <StyledActor>\r\n        <img src={\r\n            actor.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\r\n            : NoImage            \r\n        }\r\n        />\r\n        <span className=\"actor-name\">{actor.name}</span>\r\n        <span className=\"actor-character\">{actor.character}</span>\r\n    </StyledActor>\r\n);\r\n\r\nActor.propTypes = {\r\n    actor: PropTypes.object,\r\n}\r\n\r\nexport default Actor;","import React from 'react';\r\nimport Navigation from './elements/Navigation';\r\nimport MovieInfo from './elements/MovieInfo';\r\nimport MovieInfoBar from './elements/MovieInfoBar';\r\nimport Actor from './elements/Actor';\r\nimport Grid from './elements/Grid';\r\nimport Spinner from './elements/Spinner';\r\nimport {useMovieFetch} from './hooks/useMovieFetch';\r\n\r\nconst Movie = ({movieId}) => {\r\n    const [movie, loading, error] = useMovieFetch(movieId);\r\n\r\n    if(error) return <div>woops something went wrong</div>;\r\n    if(loading) return <Spinner />;\r\n\r\n    return (\r\n        <>\r\n            <Navigation movie={movie.original_title} />\r\n            <MovieInfo movie={movie} />\r\n            <MovieInfoBar \r\n                time={movie.runtime}\r\n                budget={movie.budget}\r\n                revenue={movie.revenue}\r\n            />\r\n            <Grid header=\"Actors\">\r\n                {movie.actor.map(actor =>(\r\n                    <Actor key={actor.credit_id}\r\n                    actor={actor} />\r\n                ))}\r\n            </Grid>\r\n            \r\n        </>\r\n    )\r\n};\r\n\r\n\r\nexport default Movie;","import  { useState, useEffect, useCallback } from 'react';\r\nimport { \r\n   API_URL, API_KEY\r\n} from '../../config';\r\n\r\nexport const useMovieFetch = movieId => {\r\n    const [state, setState] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n\r\n    const fetchData = useCallback(async () => {\r\n        setError(false);\r\n        setLoading(true);\r\n\r\n        try{\r\n            const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\r\n            const result = await(await fetch(endpoint)).json();\r\n            const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\r\n            const creditsResult = await(await fetch(creditsEndpoint)).json();\r\n            const directors = creditsResult.crew.filter(\r\n                member => member.job === 'Director' \r\n            );\r\n\r\n            setState({\r\n                ...result,\r\n                actor: creditsResult.cast,\r\n                directors\r\n            });\r\n        }\r\n        catch (error){\r\n            setError(true);\r\n        }\r\n        setLoading(false);\r\n\r\n    }, [movieId])\r\n\r\n    useEffect(() =>{\r\n        if(localStorage[movieId]){\r\n            console.log(\"grabbing from local storage\")\r\n            setState(JSON.parse(localStorage[movieId]));\r\n            setLoading(false);\r\n        }\r\n        else{\r\n            console.log(\"grabbing from local api\")\r\n            fetchData();\r\n        }\r\n    }, [fetchData, movieId]);\r\n\r\n    useEffect( () =>{\r\n        localStorage.setItem(movieId, JSON.stringify(state));\r\n    }, [movieId, state]);\r\n\r\n    return [state, loading, error];\r\n}","import React from 'react';\r\n\r\nconst NotFound = () => <div> Whooopps nothing found here </div>\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport Header from './elements/Header';\r\nimport Home from './Home';\r\nimport { GlobalStyle } from './styles/GlobalStyle';\r\nimport { Router } from '@reach/router';\r\nimport Movie from './Movie';\r\nimport NotFound from './NotFound';\r\n\r\nconst App = () =>(\r\n        <>\r\n            <Header/>\r\n            <Router>\r\n                <Home  path=\"/\" />\r\n                <Movie  path=\"/:movieId\" />\r\n                <NotFound  default />\r\n            </Router>\r\n\r\n            <GlobalStyle />\r\n         </>\r\n         )\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","module.exports = __webpack_public_path__ + \"static/media/no_image.31f5bb1d.jpg\";"],"sourceRoot":""}